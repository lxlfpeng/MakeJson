#任务名称
name: MakeJson2Gitee
# 触发 workflow 的事件
on: [push]
# 一个workflow由执行的一项或多项job
jobs:
  # 一个job任务，任务名为build
  build:
    #使用ubuntu的运行环境 版本为最新版
    runs-on: ubuntu-latest
    #步骤
    steps:
    #使用checkout@v2拉取代码  
    - name: checkout actions
      uses: actions/checkout@v2 # Checking out the repo
    #配置python环境这里用的是3.7的环境
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    #通过命令安装项目工程的Python依赖
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        pip install bs4
        pip install lxml
    #执行Python文件
    - name: run python
      run: |
        python InformationFlow.py
    #Git提交并推送到仓库
    - name: commit and push
      run: |
        git config --global user.email "565289282@qq.com"
        git config --global user.name "lxlfpeng"
        git add .
        git commit -m "update" -a
        git push
    #推送仓库到Gitee
    - name: push2gitee
      #用到了hub-mirror-action 文档:https://github.com/Yikun/hub-mirror-action
      uses: Yikun/hub-mirror-action@master
      with:
        #源端账户名(github)
        src: github/lxlfpeng
        #目的端账户名(gitee)
        dst: gitee/DaPengDePeng
        #SSH密钥对中的私钥
        dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
        #Gitee账户的私人令牌
        dst_token: ${{ secrets.GITEE_TOKEN }}
        #账户类型指定个人账户,如果是组织，指定组织即可，默认为用户user
        account_type: user
        #使用https方式进行clone，也可以使用ssh  
        clone_style: "https"
        #静态同步列表，在此填写需要同步的仓库名称，可填写多个
        static_list: "MakeJson"
        #启用后，强制同步，即强制覆盖目的端仓库
        force_update: true
        #启用后，强制同步，即强制覆盖目的端仓库
        debug: true
        #不同仓库名进行映射
        mappings: "MakeJson=>make-json"
        #git超时设置，超时后会自动重试git操作
        timeout: '600s'
